'use client'

import { useState, useEffect } from 'react'
import { Icon, GradientButton } from '@/components/ui'
import type { FontSizeControllerProps } from './FontSizeController.types'

/**
 * FontSizeController Â≠ó‰ΩìÂ§ßÂ∞èÊéßÂà∂Âô®
 * 
 * üéØ ÂäüËÉΩÔºö
 * - Êèê‰æõÂ≠ó‰ΩìÂ§ßÂ∞èË∞ÉÊï¥ÁïåÈù¢
 * - ÊØõÁéªÁíÉÈ£éÊ†ºÈÄâÊã©Âô®
 * - È¢ÑËÆæÂ≠ó‰ΩìÂ§ßÂ∞èÈÄâÈ°π
 * - ÁÇπÂáªÂ§ñÈÉ®Ëá™Âä®ÂÖ≥Èó≠
 * 
 * üì± ÂìçÂ∫îÂºèÔºö
 * - Ëá™ÈÄÇÂ∫îÂÆö‰Ωç
 * - ÊØõÁéªÁíÉËÉåÊôØ
 */
export function FontSizeController({ 
    fontSize, 
    onFontSizeChange,
    className = '' 
}: FontSizeControllerProps) {
    const [showFontSelector, setShowFontSelector] = useState(false)

    // Â≠ó‰ΩìÂ§ßÂ∞èÈÄâÈ°π
    const fontSizeOptions = [
        { size: 14, label: 'Â∞è', desc: '14px' },
        { size: 16, label: '‰∏≠', desc: '16px' },
        { size: 18, label: 'Â§ß', desc: '18px' },
        { size: 20, label: 'ÁâπÂ§ß', desc: '20px' }
    ]

    // ÁÇπÂáªÂ§ñÈÉ®ÂÖ≥Èó≠Â≠ó‰ΩìÈÄâÊã©Âô®
    useEffect(() => {
        const handleClickOutside = (event: MouseEvent) => {
            if (showFontSelector) {
                const fontSelector = document.querySelector('.font-selector')
                const adjustButton = document.querySelector('.font-adjust-container')

                if (fontSelector && adjustButton) {
                    if (!fontSelector.contains(event.target as Node) &&
                        !adjustButton.contains(event.target as Node)) {
                        setShowFontSelector(false)
                    }
                }
            }
        }

        if (showFontSelector) {
            document.addEventListener('mousedown', handleClickOutside)
        }

        return () => {
            document.removeEventListener('mousedown', handleClickOutside)
        }
    }, [showFontSelector])

    // Â≠ó‰ΩìÂ§ßÂ∞èË∞ÉËäÇÂäüËÉΩ
    const handleFontSizeAdjust = () => {
        setShowFontSelector(!showFontSelector)
    }

    const handleFontSizeSelect = (newSize: number) => {
        onFontSizeChange(newSize)
        setShowFontSelector(false)
    }

    return (
        <div className={`font-adjust-container ${className}`} style={{ position: 'relative' }}>
            {/* CSSÂä®ÁîªÂÆö‰πâ */}
            <style jsx>{`
                @keyframes fadeIn {
                    from {
                        opacity: 0;
                        transform: translateY(10px);
                    }
                    to {
                        opacity: 1;
                        transform: translateY(0);
                    }
                }
            `}</style>

            <GradientButton
                variant="outline" 
                size="md"
                onClick={handleFontSizeAdjust}
                title="Ë∞ÉÊï¥Â≠ó‰ΩìÂ§ßÂ∞è"
            >
                <Icon name="settings-icon" size="sm" />
                Ë∞ÉÊï¥
            </GradientButton>

            {/* Â≠ó‰ΩìÂ§ßÂ∞èÈÄâÊã©Âô® */}
            {showFontSelector && (
                <div className="font-selector" style={{
                    position: 'absolute',
                    top: '100%',
                    right: '0',
                    marginTop: '8px',
                    background: 'var(--color-bg-glass)',
                    backdropFilter: 'blur(12px)',
                    WebkitBackdropFilter: 'blur(12px)',
                    border: '1px solid var(--color-border-primary)',
                    borderRadius: '12px',
                    padding: '12px',
                    minWidth: '180px',
                    zIndex: 10000,
                    boxShadow: '0 8px 32px rgba(0, 0, 0, 0.3)',
                    animation: 'fadeIn 0.2s ease'
                }}>
                    <div style={{
                        fontSize: 'var(--font-size-xs)',
                        color: 'var(--color-text-muted)',
                        marginBottom: '12px',
                        textAlign: 'center',
                        fontWeight: '500'
                    }}>
                        ÈÄâÊã©Â≠ó‰ΩìÂ§ßÂ∞è
                    </div>
                    {fontSizeOptions.map(({ size, label, desc }) => (
                        <button
                            key={size}
                            onClick={() => handleFontSizeSelect(size)}
                            style={{
                                width: '100%',
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center',
                                padding: '10px 12px',
                                margin: '2px 0',
                                background: fontSize === size
                                    ? 'linear-gradient(90deg, rgba(59, 130, 246, 0.2), rgba(139, 92, 246, 0.2))'
                                    : 'transparent',
                                border: fontSize === size
                                    ? '1px solid rgba(59, 130, 246, 0.3)'
                                    : '1px solid transparent',
                                borderRadius: '8px',
                                cursor: 'pointer',
                                color: fontSize === size
                                    ? 'var(--color-text-primary)'
                                    : 'var(--color-text-muted)',
                                fontSize: 'var(--font-size-sm)',
                                fontWeight: fontSize === size ? '500' : 'normal',
                                transition: 'all 0.2s ease'
                            }}
                            onMouseEnter={(e) => {
                                if (fontSize !== size) {
                                    e.currentTarget.style.background = 'rgba(255, 255, 255, 0.05)'
                                    e.currentTarget.style.color = 'var(--color-text-primary)'
                                }
                            }}
                            onMouseLeave={(e) => {
                                if (fontSize !== size) {
                                    e.currentTarget.style.background = 'transparent'
                                    e.currentTarget.style.color = 'var(--color-text-muted)'
                                }
                            }}
                        >
                            <span>{label}</span>
                            <span style={{ 
                                fontSize: 'var(--font-size-xs)', 
                                opacity: 0.7 
                            }}>
                                {desc}
                            </span>
                        </button>
                    ))}
                </div>
            )}
        </div>
    )
} 