name: aibianx-integrated

services:
  # ===== 共享数据库 =====
  postgres:
    image: postgres:17-alpine
    container_name: aibianx-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./data/database:/var/lib/postgresql/data
      - postgres_socket:/var/run/postgresql
      - ./configs/postgresql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - integrated-network

  # ===== 缓存服务 =====
  redis:
    image: redis:7.4-alpine
    container_name: aibianx-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    networks:
      - integrated-network

  # ===== 搜索引擎 =====
  meilisearch:
    image: getmeili/meilisearch:v1.5
    container_name: aibianx-meilisearch
    restart: unless-stopped
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      MEILI_ENV: production
    volumes:
      - ./data/meilisearch:/meili_data
    ports:
      - "7700:7700"
    networks:
      - integrated-network

  # ===== 应用后端 =====
  backend:
    build:
      context: ../backend
      dockerfile: ../deployment/backend.Dockerfile
    container_name: aibianx-backend
    restart: unless-stopped
    env_file:
      - ../backend/.env
    volumes:
      - ../backend/public/uploads:/app/public/uploads
      - strapi_cache:/app/.cache
    ports:
      - "1337:1337"
    depends_on:
      - postgres
      - redis
      - meilisearch
    networks:
      - integrated-network

  # ===== 应用前端 =====
  frontend:
    build:
      context: ../frontend
      dockerfile: ../deployment/frontend.Dockerfile
      args:
        NEXT_PUBLIC_FRONTEND_DOMAIN: ${DOMAIN}
        NEXT_PUBLIC_FRONTEND_PORT: 80
        NEXT_PUBLIC_FRONTEND_PROTOCOL: https
        NEXT_PUBLIC_BACKEND_DOMAIN: ${DOMAIN}
        NEXT_PUBLIC_BACKEND_PORT: 1337
        NEXT_PUBLIC_BACKEND_PROTOCOL: https
        NEXT_PUBLIC_SEARCH_DOMAIN: ${DOMAIN}
        NEXT_PUBLIC_SEARCH_PORT: 7700
        NEXT_PUBLIC_SEARCH_PROTOCOL: https
        NEXT_PUBLIC_SITE_URL: https://${DOMAIN}
        NEXTAUTH_URL: https://${DOMAIN}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    container_name: aibianx-frontend
    restart: unless-stopped
    env_file:
      - ../frontend/.env.local
    environment:
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - integrated-network

  # ===== 邮件系统 - 反垃圾邮件 =====
  rspamd:
    image: billionmail/rspamd:1.1
    container_name: aibianx-rspamd
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - REDISPASS=${REDIS_PASSWORD}
    volumes:
      - ./configs/billionmail/rspamd:/etc/rspamd/local.d
      - ./data/rspamd:/var/lib/rspamd
      - ./data/logs/rspamd:/var/log/rspamd
    depends_on:
      - redis
    networks:
      - integrated-network

  # ===== 邮件系统 - IMAP/POP3 服务器 =====
  dovecot:
    image: billionmail/dovecot:1.4
    container_name: aibianx-dovecot
    restart: unless-stopped
    cap_add:
      - NET_BIND_SERVICE
    environment:
      - TZ=${TZ}
      - DBNAME=billionmail
      - DBUSER=postgres
      - DBPASS=${POSTGRES_PASSWORD}
      - BILLIONMAIL_HOSTNAME=${MAIL_DOMAIN}
      - REDISPASS=${REDIS_PASSWORD}
    volumes:
      - ./configs/billionmail/dovecot:/etc/dovecot
      - ./data/logs/dovecot:/var/log/mail
      - ./data/ssl:/etc/ssl/mail
      - ./data/vmail:/var/vmail
      - postgres_socket:/var/run/postgresql
    ports:
      - "143:143"   # IMAP
      - "993:993"   # IMAPS
      - "110:110"   # POP3
      - "995:995"   # POP3S
    depends_on:
      - postgres
      - redis
    networks:
      - integrated-network

  # ===== 邮件系统 - SMTP 服务器 =====
  postfix:
    image: billionmail/postfix:1.5
    container_name: aibianx-postfix
    restart: unless-stopped
    cap_add:
      - NET_BIND_SERVICE
    environment:
      - TZ=${TZ}
      - DBNAME=billionmail
      - DBUSER=postgres
      - DBPASS=${POSTGRES_PASSWORD}
      - BILLIONMAIL_HOSTNAME=${MAIL_DOMAIN}
      - REDISPASS=${REDIS_PASSWORD}
    volumes:
      - ./configs/billionmail/postfix:/etc/postfix/conf
      - ./data/logs/postfix:/var/log/mail
      - ./data/ssl:/etc/ssl/mail
      - ./data/postfix:/var/spool/postfix
      - postgres_socket:/var/run/postgresql
    ports:
      - "25:25"     # SMTP
      - "465:465"   # SMTPS
      - "587:587"   # Submission
    depends_on:
      - postgres
      - redis
    networks:
      - integrated-network

  # ===== 邮件系统 - Web邮箱 =====
  webmail:
    image: roundcube/roundcubemail:1.6.10-fpm-alpine
    container_name: aibianx-webmail
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - ROUNDCUBEMAIL_DB_TYPE=pgsql
      - ROUNDCUBEMAIL_DB_HOST=postgres
      - ROUNDCUBEMAIL_DB_NAME=billionmail
      - ROUNDCUBEMAIL_DB_USER=postgres
      - ROUNDCUBEMAIL_DB_PASSWORD=${POSTGRES_PASSWORD}
      - ROUNDCUBEMAIL_DEFAULT_HOST=dovecot
      - ROUNDCUBEMAIL_SMTP_SERVER=postfix
    volumes:
      - ./data/webmail:/var/www/html
      - ./configs/billionmail/webmail:/var/roundcube/config
    depends_on:
      - postgres
      - dovecot
      - postfix
    networks:
      - integrated-network

  # ===== 邮件系统 - 管理后台 =====
  billionmail-core:
    image: billionmail/core:4.0.1
    container_name: aibianx-billionmail-core
    restart: unless-stopped
    cap_add:
      - NET_BIND_SERVICE
      - NET_ADMIN
      - NET_RAW
    environment:
      - TZ=${TZ}
      - DBNAME=billionmail
      - DBUSER=postgres
      - DBPASS=${POSTGRES_PASSWORD}
      - BILLIONMAIL_HOSTNAME=${MAIL_DOMAIN}
      - ADMIN_USERNAME=${BILLIONMAIL_ADMIN_USERNAME}
      - ADMIN_PASSWORD=${BILLIONMAIL_ADMIN_PASSWORD}
    volumes:
      - ./data/ssl:/etc/ssl/mail
      - ./configs/billionmail/core:/opt/billionmail/conf
      - ./data/logs/billionmail:/opt/billionmail/logs
      - ./data/billionmail-core:/opt/billionmail/core/data
      - postgres_socket:/opt/billionmail/postgresql-socket
      - ./data/webmail:/opt/billionmail/webmail-data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "8080:8080"  # BillionMail 管理界面
    depends_on:
      - postgres
      - redis
    networks:
      - integrated-network

  # ===== 统一网关 =====
  nginx:
    image: nginx:alpine
    container_name: aibianx-nginx
    restart: unless-stopped
    volumes:
      - ./nginx-unified.conf:/etc/nginx/nginx.conf:ro
      - ./data/ssl:/etc/ssl/certs:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
      - billionmail-core
      - webmail
    networks:
      - integrated-network

# ===== 数据卷定义 =====
volumes:
  postgres_socket:
  strapi_cache:

# ===== 网络定义 =====
networks:
  integrated-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-aibianx